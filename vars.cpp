#include "cvm.h"

u64* MAIN_MEM;
instruction* IP;
std::stack<u64> Stack;
std::stack<u64> returnStack;

bool end = false;
//u8 program[] = { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 17, 0, 0, 0, 0, 0, 0, 0, 8, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 6, 3, 4, 1, 0, 0, 0, 0, 0, 0, 0, 6, 11, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 255 };
u8 program[] = {0,13,23,0,0,0,0,0,0,0,14,0,1,0,1,0,0,0,0,0,0,0,14,0,1,0,1,0,0,0,0,0,0,0,1,3,6,0,0,0,0,0,0,0,8,14,0,1,0,3,0,0,0,0,0,0,0,14,255};
u8 program1[] = {1,4, 0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x2C, 0x20, 0x57, 6,
                        1,4, 0x6F, 0x72, 0x6C, 0x64, 0x21, 0x0A, 0x00, 0x00, 6,
                        7,5, 1,0,0,0,0,0,0,0,4,7,5, 0,0,0,0,0,0,0,0, 4,
                        1,0, 1,0,0,0,0,0,0,0, 1,2, 0,0,0,0,0,0,0,0, 1,3, 14,0,0,0,0,0,0,0, 8, 255};
// 0x48 0x65 0x6C 0x6C 0x6F 0x2C 0x20 0x57
// 0x6F 0x72 0x6C 0x64 0x21 0x0A 0x00 0x00

u64 program_len = sizeof(program);

u64 reg[5]; 
u64* RAX;
u64* RBX;
u64* RCX;
u64* RDX;
u64* RSX;